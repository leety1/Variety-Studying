class Solution {
    public int longestPalindrome(String[] words) {
        int rst = 0;
        Map<String, Integer> map = new HashMap();
        for(String s : words) map.put(s,map.getOrDefault(s,0) + 1);
        int c = 0;

        for(String s : map.keySet()){
            String s2 = reverse(s);
            if(s.equals(s2)){
                int val = map.get(s);
                    if(val %2 != 0){val -= 1; c = 1;}
                rst += 2 * val;
                map.put(s, map.get(s) - val);
            }else if(map.containsKey(s2)){
                int occ = Math.min(map.get(s), map.get(s2));
                rst += (4*occ);

                map.put(s, map.get(s) - occ);
                map.put(s2, map.get(s2) - occ);
            }
        }
        return c == 1 ? rst + 2 : rst;
    }

    public static String reverse(String str){
        StringBuilder sb = new StringBuilder(str);
        return sb.reverse().toString();
    }
}
